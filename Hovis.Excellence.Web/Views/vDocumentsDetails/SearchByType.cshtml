@model PagedList.IPagedList<Hovis.Excellence.Web.Models.v_Documents_Details>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Search by Document Type";
}


<div class="content-wrap no-padding">
    <section class="panel panel-info">
        <header class="panel-heading">Environment Policy Manuals Search by Document Type</header>
        <div class="panel-body">
@using (Html.BeginForm("SearchByType", "vDocumentsDetails", FormMethod.Get, new { id = "SearchByType" }))
{
    <div class="container">
        <div class="row">
            <div class="col-md-2">
                <p>Search:</p>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div class='input-group text' id='Searchfield'>
                        @Html.TextBox("Searchfield", ViewBag.CurrentFilter as string, new { @class = "form-control input-group txtsearch" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                    @String.Concat(" | ", "")
                    @*<a href="@Url.Action("Report", "vDocumentsDetails", new { Searchfield = "xxxx" })" id="lnk">Get Version PDF</a>*@
                    @Html.ActionLink("View PDF", "Report", new { Searchfield = "xxxx" }, new { @class = "btn btn-primary lnk" })
                </div>
            </div>
        </div>
    </div>
}            <div class="table-responsive">
                <table class="table responsive" data-sortable="" data-sortable-initialized="true">
                    <thead>
                        <tr>
                            <th data-sorted="true" data-sorted-direction="descending">@Html.DisplayNameFor(model => model.First().DocumentType)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().Title)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().IssueNumber)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().Owner)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().ReviewPeriodInMonths)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().Description)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().DateCreated)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().ReviewDate)</th>
                        </tr>
                    </thead>
                    @foreach (var item in Model)
            {
                        <tbody>
                            <tr class="">
                                <td>@Html.DisplayFor(modelItem => item.DocumentType)</td>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.IssueNumber)</td>
                                <td>@Html.DisplayFor(modelItem => item.Owner)</td>
                                <td>@Html.DisplayFor(modelItem => item.ReviewPeriodInMonths)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => item.DateCreated)</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReviewDate)
                                    @Html.HiddenFor(modelItem => item.IssueDate)
                                    @Html.HiddenFor(modelItem => item.ApplicationId)
                                    @Html.HiddenFor(modelItem => item.DocumentTypeId)
                                    @Html.HiddenFor(modelItem => item.DocumentCategoryId)
                                    @Html.HiddenFor(modelItem => item.DocumentTabsId)
                                    @Html.HiddenFor(modelItem => item.ApplicationName)
                                    @Html.HiddenFor(modelItem => item.DocumentCategory)
                                    @Html.HiddenFor(modelItem => item.DocumentTab)
                                </td>

                            </tr>
                        </tbody>
            }
                </table>
                <br />
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("IndexSearch", new { page, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</section>
</div>
@*<script>
    $("#lnk").click(function (evt) {
        var fakedUri = $("#lnk").prop("href");
        var uri = fakedUri.replace("xxxx", $("#Searchfield").val());
    })
</script>*@
<script>
    $(function () {
        $(".lnk").click(function () {
            var fakedUri = $(".txtsearch").val();
            this.href = this.href.replace("xxxx", fakedUri);
        });
    });
</script>

